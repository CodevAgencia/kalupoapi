# Default values for deployment, this is necessary because we're using a unified helm subchart
deployment:

  # The minimum/default number of pods to run
  replicaCount: 2

  # This is the name of the deployment, this is used in a _lot_ of places in the helm charts so lets just specify it
  name: kalupo-kalupoweb

  # Pods per node
  maxPodsPerNode: 2

  # What group we're in in gitlab and what namespace we deploy to in kubernetes
  image:
    repository: "207909261677.dkr.ecr.us-east-1.amazonaws.com/kalupo/kalupoweb"
    imagePullPolicy: Always
    # This is for testing things, uncomment the next two lines
    # command: ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]
    # args: ["-c", "while true; do echo hello; sleep 10;done"]
  initContainers:
    - name: db-migrations
      image: '207909261677.dkr.ecr.us-east-1.amazonaws.com/kalupo/kalupoweb'
      command: ["sh", "-c", "php artisan migrate:fresh --seed --force"]
      env:
        - name: DB_DATABASE
          valueFrom:
            secretKeyRef:
              name: shared-db-aurorav2
              key: database
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: shared-db-aurorav2
              key: hostname
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: shared-db-aurorav2
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: shared-db-aurorav2
              key: password
      # volumes:
      #   - name: admin-config
      #     configMap:
      #       name: admin-config
      volumeMounts:
      - name: admin-config
        mountPath: /var/www/html/.env
        subPath: .env
        readOnly: true

  lifecycle:
    postStart:
      exec:
        command: ["/bin/sh", "-c", "cp -r /var/www/html/public/. /public"]

  extraContainers:
    - name: nginx-proxy
      image: nginx:alpine
      securityContext:
        allowPrivilegeEscalation: false
        runAsUser: 0
      volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/templates/default.conf.template
          subPath: default.conf.template
          readOnly: true
        - name: shared-files
          mountPath: /var/www/html/public

  # This service listens on port 3000
  service:
    targetPort: 80

  # nginx
  volumes:
    - name: admin-config
      configMap:
        name: admin-config
    - name: nginx-config
      configMap:
        name: nginx-config
    - name: shared-files
      emptyDir: {}
  volumeMounts:
    - name: admin-config
      mountPath: /var/www/html/.env
      subPath: .env
      readOnly: true
    - name: shared-files
      mountPath: /public

  ingress:
    enabled: true

  # livenessProbes are used to determine when to restart a container
  # Only specify the values you need to override from the defaults
  livenessProbe:
    enabled: true
    probeType: tcpSocket

  # readinessProbes are used to determine when a container is ready to start accepting traffic
  # Only specify the values you need to override from the defaults
  readinessProbe:
    enabled: true
    probeType: tcpSocket

  # This MUST be enabled for consul to work properly
  serviceAccount:
    enabled: true

  globalEnvs:
    - name: DB_DATABASE
      valueFrom:
        secretKeyRef:
          name: shared-db-aurorav2
          key: database
    - name: DB_HOST
      valueFrom:
        secretKeyRef:
          name: shared-db-aurorav2
          key: hostname
    - name: DB_USERNAME
      valueFrom:
        secretKeyRef:
          name: shared-db-aurorav2
          key: username
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: shared-db-aurorav2
          key: password

  # deployment container resource requests/limits
  # this is set VERY low by default, to be aggressive above resource limiting, please override this if necessary
  # Note: Limits are HARD Limits
  #       Requests are "soft" limits and are what affects HPA (autoscaling) aggressiveness if HPA is enabled
  resources:
    limits:
     cpu: 150m
     memory: 500Mi
    requests:
     cpu: 50m
     memory: 200Mi
